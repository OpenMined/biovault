name: CI

on:
  pull_request:
    branches: [ main, develop ]
  # Optionally, allow manual trigger for debugging
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Show Rust versions
        run: |
          rustc --version
          cargo --version
          rustfmt --version

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('cli/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('cli/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: cli/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('cli/Cargo.lock') }}-v2

      - name: Check formatting
        if: matrix.os != 'windows-latest'
        run: cd cli && cargo fmt -- --check

      - name: Run clippy (all targets)
        if: matrix.os != 'windows-latest'
        run: cd cli && cargo clippy --all-targets --all-features --no-deps -- -D warnings

      - name: Run tests
        run: cd cli && cargo test --verbose

      - name: Run slow tests (feature gated)
        run: cd cli && cargo test --features slow-tests --verbose

      - name: Build
        run: cd cli && cargo build --verbose

  # Run the BioVault integration tests with local clients
  # Note: Inlined here instead of using workflow_call so it runs on PR immediately
  local-integration-test:
    name: BioVault Integration Test - Local
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install just
      uses: extractions/setup-just@v1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: nextest

    - name: Add minio to /etc/hosts
      run: |
        echo "127.0.0.1 minio" | sudo tee -a /etc/hosts
        cat /etc/hosts | grep minio

    - name: Run integration tests with local clients
      shell: bash
      run: |
        # Export CI environment variable so the justfile knows we're in CI
        export CI=true
        just test-integration-local

    - name: Show logs on failure
      if: failure()
      run: |
        echo "=== Server Logs ==="
        docker logs syftbox-server || true
        echo "=== Client 1 Directory ==="
        ls -la test-clients-local/client1@syftbox.net/ || true
        ls -la test-clients-local/client1@syftbox.net/.syftbox/ || true
        echo "=== Client 1 Logs ==="
        cat test-clients-local/client1@syftbox.net/.syftbox/logs/client.log || echo "No client1 log file found"
        echo "=== Client 2 Directory ==="
        ls -la test-clients-local/client2@syftbox.net/ || true
        ls -la test-clients-local/client2@syftbox.net/.syftbox/ || true
        echo "=== Client 2 Logs ==="
        cat test-clients-local/client2@syftbox.net/.syftbox/logs/client.log || echo "No client2 log file found"
        echo "=== Test files ==="
        ls -la test-clients-local/ || true
        echo "=== Check syftbox installation ==="
        which syftbox || echo "syftbox not in PATH"
        echo "=== Python packages ==="
        pip list | grep -i syft || true
