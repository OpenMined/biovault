name: Reusable Colab Test

on:
  workflow_call:
    inputs:
      event_name:
        description: 'The event that triggered this workflow'
        required: false
        type: string
        default: 'manual'
      release_tag:
        description: 'Release tag being tested'
        required: false
        type: string
        default: ''

jobs:
  colab-environment-test:
    name: Test Colab Setup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Set up local BuildKit cache only
      - name: Set up Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-colab-${{ hashFiles('tests/docker/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-colab-
            
      - name: Display environment
        run: |
          echo "Event: ${{ inputs.event_name }}"
          if [ -n "${{ inputs.release_tag }}" ]; then
            echo "Testing release: ${{ inputs.release_tag }}"
          fi
          echo "Runner: ${{ runner.os }} / ${{ runner.arch }}"
          echo "Architecture: $(uname -m)"
          echo "Docker version: $(docker --version)"
          
      # Build with local caching only
      - name: Build Docker image with cache
        uses: docker/build-push-action@v6
        with:
          context: tests/docker
          file: tests/docker/Dockerfile
          tags: biovault-colab-test:latest
          load: true  # Load into local Docker daemon for testing
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          push: false  # Don't push the test image
          
      # Move cache to avoid growing indefinitely
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true
          
      - name: Run Colab environment test
        run: |
          cd tests/docker
          chmod +x test_colab_install.sh
          # Use the locally built image
          export DOCKER_IMAGE_NAME="biovault-colab-test:latest"
          ./test_colab_install.sh
        env:
          CI: true
          GITHUB_ACTIONS: true
        timeout-minutes: 30
        
      - name: Report success
        if: success()
        run: |
          echo "✅ Colab environment test passed"
          if [ -n "${{ inputs.release_tag }}" ]; then
            echo "   Release: ${{ inputs.release_tag }}"
          fi
          
      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: colab-test-logs-${{ github.run_id }}
          path: |
            tests/docker/*.log
            /tmp/colab-test-*.log
          retention-days: 7
          
      - name: Report failure
        if: failure()
        run: |
          echo "❌ Colab environment test failed"
          if [ -n "${{ inputs.release_tag }}" ]; then
            echo "   Release: ${{ inputs.release_tag }}"
          fi
          exit 1